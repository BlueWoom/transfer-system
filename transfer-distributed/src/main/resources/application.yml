spring:
  application:
    name: transfer-distributed

  cloud:
    config:
      enabled: false

  threads:
    virtual:
      enabled: true

  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST}
    port: ${SPRING_RABBITMQ_PORT}
    username: ${SPRING_RABBITMQ_USERNAME}
    password: ${SPRING_RABBITMQ_PASSWORD}
    listener:
      simple:
        default-requeue-rejected: false

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      pool-name: "SpringBootDevHikariCP"
      maximum-pool-size: 5
      minimum-idle: 2
      idle-timeout: 600000
      max-lifetime: 900000
      connection-timeout: 20000

  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        default_schema: public
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  sql:
    init:
      mode: always

management:
  endpoints:
    web:
      exposure:
        include: "*"

rabbitmq-config:
  exchange: "registry.exchange"
  queue: "registry.queue"
  routing-key: "registry.work"
  dlx: "registry.dlx"
  dlq: "registry.dlq"

server:
  port: 8081

eureka:
  client:
    service-url:
      defaultZone: ${SPRING_EUREKA_SERVICE}/eureka/
